----------------------------------------
project goal (readme):
# Mahjong.js----------------------------------------
current project structure:
.\index.html
.\README.md
.\script.js
.\styles.css
----------------------------------------
.\index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mahjong.js Mastery</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="game-container">
        <div id="game-board">
            <div id="player1-hand" class="player-hand ai-hand ai-hand-top"></div>
            <div id="player2-hand" class="player-hand ai-hand ai-hand-left"></div>
            <div id="player3-hand" class="player-hand ai-hand ai-hand-right"></div>
            <div id="player4-hand" class="player-hand player-hand-bottom"></div>
        </div>
        <div id="controls">
            <button id="draw-button">Draw Tile</button>
            <button id="discard-button">Discard Tile</button>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>
----------------------------------------
.\README.md:
# Mahjong.js----------------------------------------
.\script.js:
document.addEventListener('DOMContentLoaded', () => {
    const tileSet = [
        '1ch', '2ch', '3ch', '4ch', '5ch', '6ch', '7ch', '8ch', '9ch',
        '1b', '2b', '3b', '4b', '5b', '6b', '7b', '8b', '9b',
        '1c', '2c', '3c', '4c', '5c', '6c', '7c', '8c', '9c',
        '1w', '2w', '3w', '4w', '1d', '2d', '3d'
    ];

    let deck = [];
    let players = [[], [], [], []];
    let currentPlayer = 3; // Player is the last in the array

    const playerHands = [
        document.getElementById('player1-hand'),
        document.getElementById('player2-hand'),
        document.getElementById('player3-hand'),
        document.getElementById('player4-hand')
    ];
    
    const drawButton = document.getElementById('draw-button');
    const discardButton = document.getElementById('discard-button');

    function shuffleTiles() {
        deck = tileSet
            .concat(tileSet).concat(tileSet).concat(tileSet) // 4 sets per tile (kinda ugly but its ok)
            .sort(() => Math.random() - 0.5); // shuffle
    }

    function dealTiles() {
        for (let i = 0; i < 13; i++) {
            players.forEach(player => player.push(deck.pop()));
        }
        updateHands();
    }

    function updateHands() {
        players.forEach((player, index) => {
            playerHands[index].innerHTML = '';
            player.forEach(tile => {
                const tileElement = document.createElement('div');
                tileElement.classList.add('tile');
                tileElement.textContent = tile;
                if (index === currentPlayer) {
                    tileElement.addEventListener('click', () => selectTile(tileElement, index));
                }
                playerHands[index].appendChild(tileElement);
            });
        });
    }

    function drawTile() {
        if (deck.length > 0) {
            players[currentPlayer].push(deck.pop());
            updateHands();
        }
    }

    function selectTile(tile, playerIndex) {
        if (playerIndex === currentPlayer) {
            players[playerIndex] = players[playerIndex].filter(t => t !== tile.textContent);
            updateHands();
        }
    }

    function discardTile() {
        currentPlayer = (currentPlayer + 1) % 4;
        updateHands();
    }

    drawButton.addEventListener('click', drawTile);
    discardButton.addEventListener('click', discardTile);

    // Initialize game
    shuffleTiles();
    dealTiles();
});
----------------------------------------
.\styles.css:
body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f0f0f0;
    flex-direction: column;
}

#game-container {
    text-align: center;
}

#game-board {
    position: relative;
    width: 80%;
    height: 80%;
    display: grid;
    grid-template-areas:
        "ai-top ai-top ai-top"
        "ai-left player ai-right";
    gap: 20px;
    margin-bottom: 20px;
}

.player-hand {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    border: 1px solid #ccc;
    padding: 10px;
    background-color: #fff;
}

.ai-hand-top {
    grid-area: ai-top;
    flex-direction: row;
}

.ai-hand-left {
    grid-area: ai-left;
    flex-direction: column;
}

.ai-hand-right {
    grid-area: ai-right;
    flex-direction: column;
}

.player-hand-bottom {
    grid-area: player;
    flex-direction: row;
}

.tile {
    width: 50px;
    height: 70px;
    background-color: #ffffff;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    user-select: none;
    margin: 2px;
}

.ai-hand .tile {
    transform: rotate(90deg);
}

#controls {
    margin-top: 20px;
}

#draw-button, #discard-button {
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    margin: 5px;
}
----------------------------------------
